/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import TrackerFom.TrackerForm;
import TrackerFom.Validations;
import controllers.AuthorController;
import core.tablemodel.LeTableModel;
import java.awt.event.MouseEvent;
import java.sql.Date;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Optional;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import models.Author;
import utils.Dialogs;

/**
 *
 * @author USER
 */
public class FrmAutor extends javax.swing.JDialog {

    /**
     * Creates new form FrmAutor
     */
    private TrackerForm formTrack = new TrackerForm();
    private Author currentNode = null;
    private AuthorController conrtroller = AuthorController.instance();
    public FrmAutor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        this.initFields();
        this.fillTable(null);
    }

      private boolean isEditMode() {
        return this.currentNode != null;
    }
      
     public static FrmAutor open() {
        FrmAutor frm = new FrmAutor(null, false);
        frm.setLocationRelativeTo(null);
        frm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frm.setVisible(true);
        return frm;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        floatMen = new javax.swing.JPopupMenu();
        delete = new javax.swing.JMenuItem();
        container = new javax.swing.JPanel();
        Area = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        form = new javax.swing.JPanel();
        input_nombre = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        input_apellidos = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        input_pais = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtPais = new javax.swing.JTextField();
        input_fechanacimiento = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jdateNacimiento = new com.toedter.calendar.JDateChooser();
        buttons = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        table_pane = new javax.swing.JPanel();
        lblTotalArea = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAuthor = new javax.swing.JTable();

        delete.setText("Eliminar");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        floatMen.add(delete);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        container.setLayout(new java.awt.GridLayout(1, 2, 10, 25));

        Area.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 20));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Mantenimiento de Author");
        Area.add(jLabel5);

        form.setPreferredSize(new java.awt.Dimension(380, 500));
        form.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 20));

        input_nombre.setPreferredSize(new java.awt.Dimension(350, 60));
        input_nombre.setLayout(new java.awt.BorderLayout(10, 10));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Nombre:");
        input_nombre.add(jLabel2, java.awt.BorderLayout.PAGE_START);

        txtName.setPreferredSize(new java.awt.Dimension(80, 30));
        input_nombre.add(txtName, java.awt.BorderLayout.PAGE_END);

        form.add(input_nombre);

        input_apellidos.setPreferredSize(new java.awt.Dimension(350, 60));
        input_apellidos.setLayout(new java.awt.BorderLayout(10, 10));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Apellidos:");
        input_apellidos.add(jLabel6, java.awt.BorderLayout.PAGE_START);

        txtApellidos.setPreferredSize(new java.awt.Dimension(80, 30));
        input_apellidos.add(txtApellidos, java.awt.BorderLayout.PAGE_END);

        form.add(input_apellidos);

        input_pais.setPreferredSize(new java.awt.Dimension(350, 60));
        input_pais.setLayout(new java.awt.BorderLayout(10, 10));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Pais");
        input_pais.add(jLabel8, java.awt.BorderLayout.PAGE_START);

        txtPais.setPreferredSize(new java.awt.Dimension(80, 30));
        input_pais.add(txtPais, java.awt.BorderLayout.PAGE_END);

        form.add(input_pais);

        input_fechanacimiento.setPreferredSize(new java.awt.Dimension(350, 60));
        input_fechanacimiento.setLayout(new java.awt.BorderLayout(10, 10));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Fecha de Nacimiento:");
        input_fechanacimiento.add(jLabel7, java.awt.BorderLayout.PAGE_START);
        input_fechanacimiento.add(jdateNacimiento, java.awt.BorderLayout.CENTER);

        form.add(input_fechanacimiento);

        buttons.setPreferredSize(new java.awt.Dimension(400, 60));

        btnSave.setText("Guardar");
        btnSave.setPreferredSize(new java.awt.Dimension(200, 45));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        buttons.add(btnSave);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/clean.png"))); // NOI18N
        jButton2.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        buttons.add(jButton2);

        form.add(buttons);

        Area.add(form);

        container.add(Area);

        table_pane.setPreferredSize(new java.awt.Dimension(500, 510));
        table_pane.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 10));

        lblTotalArea.setText("Total de Authores:");
        table_pane.add(lblTotalArea);

        tableAuthor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableAuthor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAuthorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableAuthor);

        table_pane.add(jScrollPane1);

        container.add(table_pane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, 998, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
    private void initFields(){
        this.formTrack.addField("name", txtName, String.class, value -> {
            return Validations.StrinRequied(value);
        }, "El nombre es requerido");
        this.formTrack.addField("apellidos", txtApellidos, String.class, value -> {
            return Validations.StrinRequied(value);
        }, "Los apellidos son requerido");
        
         this.formTrack.addField("pais", txtPais, String.class, value -> {
            return Validations.StrinRequied(value);
        }, "El pai es requerido");
          this.formTrack.addField("fechanac", jdateNacimiento, Date.class);
        
    }
    private void patchValues(Author node){
        txtName.setText(node.getNombre());
        txtPais.setText(node.getApellidos());
        jdateNacimiento.setDate(node.getFechaNac());
        txtApellidos.setText(node.getApellidos());
    }
    private Author obtainValues(){
         String name = (String)this.formTrack.getValue("name");
         String apellidos = (String)this.formTrack.getValue("apellidos");
         String pais = (String)this.formTrack.getValue("pais");
         Date  fechaNac = (Date)this.formTrack.getValue("fechanac");
         Author objAuthor = new Author();
         objAuthor.setApellidos(apellidos);
         objAuthor.setNombre(name);
         objAuthor.setPais(pais);
         objAuthor.setFechaNac(fechaNac);
        return objAuthor;
    }
      private void changueState(Author node) {
        if (node == null) {
           this.btnSave.setText("Guardar");
            this.currentNode = null;
           this.formTrack.cleanForm();
                
        } else {
            this.btnSave.setText("Guardar cambios");
            this.patchValues(node);
            this.currentNode = node;

        }
    }
    
      private void fillTable(String query){
         Object[] columns = {"Nombre", "Apellidos", "pais", "F. Nacimiento"};
        LeTableModel<Author> modelo = new LeTableModel<Author>(node -> {
            return new Object[]{node.getNombre() , node.getApellidos() , node.getPais() , node.getFechaNac()};
        });
        modelo.addColumns(Arrays.asList(columns));
        try {
            this.conrtroller.updateNodes("").forEach(node -> {
                modelo.addRow(node);
            });
            tableAuthor.setModel(modelo);
        } catch (SQLException ex) {
            Dialogs.bderrorMessage();
        }
      }
      
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        if (!this.formTrack.isValid()) {
            Dialogs.errorMessage(this.formTrack.getError());
            return;
        }
        try {
            // save
            if (!isEditMode()) {
                Optional<Author> optNode = conrtroller.createNode(this.obtainValues());
                if (optNode.isPresent()) {
                    Dialogs.successMessage("Se ha creado un author");
                    this.changueState(optNode.get());
                } else {
                    throw new Exception();
                }
            } else {
                // edit
                Optional<Author> optNode = conrtroller.updateNode(this.currentNode.getCodigo(), this.obtainValues());
                if (optNode.isPresent()) {
                    Dialogs.successMessage("Se ha editado un registro");
                    this.changueState(null);
                } else {
                    throw new Exception();
                }
            }
            this.fillTable(null);

        } catch (Exception ex) {
            ex.printStackTrace();
            Dialogs.errorMessage("Tubimos un problema Al hacer esta operacion");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    
   
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       this.changueState(null);
       this.resolvePopup();

    }//GEN-LAST:event_jButton2ActionPerformed

     private Author selectedCurrentNode() {
        LeTableModel<Author> modelo = (LeTableModel<Author>) tableAuthor.getModel();
        int row = tableAuthor.getSelectedRow();
        Author node = modelo.get(row);
        this.changueState(node);
        return node;
    }
    private void tableAuthorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAuthorMouseClicked

        if (evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1) {

            //  floatMen.setLocation(evt.getComponent().getX(), evt.getPoint);
            floatMen.setLocation(evt.getLocationOnScreen());
            floatMen.setVisible(true);

        } else {
            this.selectedCurrentNode();
        }

    }//GEN-LAST:event_tableAuthorMouseClicked
  private void resolvePopup() {
        if (floatMen.isVisible()) {
            floatMen.setVisible(false);
        }
    }
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try {
            // TODO add your handling code here:
            int resp = Dialogs.confirmMessage("Desear eliminar este registro", "Aviso");
            if (resp == JOptionPane.OK_OPTION) {
                Optional<Author> optArea = this.conrtroller.deleteNode(this.currentNode.getCodigo());
                if (optArea.isPresent()) {
                    Dialogs.successMessage("Se ha eliminado un registro");
                    this.changueState(null);
                    this.fillTable(null);
                } else {
                    throw new SQLException();
                }
             
            }
               this.resolvePopup();

        } catch (SQLException ex) {
            Dialogs.bderrorMessage();
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
             if (floatMen.isVisible()) {
            floatMen.setVisible(false);
        }
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmAutor dialog = new FrmAutor(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Area;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel buttons;
    private javax.swing.JPanel container;
    private javax.swing.JMenuItem delete;
    private javax.swing.JPopupMenu floatMen;
    private javax.swing.JPanel form;
    private javax.swing.JPanel input_apellidos;
    private javax.swing.JPanel input_fechanacimiento;
    private javax.swing.JPanel input_nombre;
    private javax.swing.JPanel input_pais;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdateNacimiento;
    private javax.swing.JLabel lblTotalArea;
    private javax.swing.JTable tableAuthor;
    private javax.swing.JPanel table_pane;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPais;
    // End of variables declaration//GEN-END:variables
}
