/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import TrackerFom.TrackerForm;
import TrackerFom.Validations;
import controllers.AreaController;
import core.tablemodel.LeTableModel;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.WindowConstants;
import models.Area;
import utils.Dialogs;

/**
 *
 * @author USER
 */
public class FrmArea extends javax.swing.JDialog {

    private Area currentArea = null;

    private TrackerForm formTrack = new TrackerForm();
    public AreaController areacontroller = AreaController.instance();

    public FrmArea(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();
        ButtonGroup btns = new ButtonGroup();
        btns.add(stdSuspend);
        btns.add(stdVigente);

        this.initFields();
        this.fillTable(null);
    }

    private void initFields() {

        this.formTrack.addField("code", txtCodigo, Integer.class);
        this.formTrack.addField("name", txtName, String.class, value -> {
            return Validations.StrinRequied(value);
        }, "El nombre es requerido");
        txtCodigo.setEnabled(false);

        Validations.limitOnlyNumbers(txtCodigo, 60);
    }

    public static FrmArea open() {
        FrmArea frm = new FrmArea(null, false);
        frm.setLocationRelativeTo(null);
        frm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frm.setVisible(true);
        return frm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        floatMen = new javax.swing.JPopupMenu();
        delete = new javax.swing.JMenuItem();
        supend = new javax.swing.JMenuItem();
        container = new javax.swing.JPanel();
        Area = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        form = new javax.swing.JPanel();
        input_codigo = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        codigo = new javax.swing.JPanel();
        txtCodigo = new javax.swing.JTextField();
        btnGenerateCode = new javax.swing.JButton();
        input_nombre = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        input_vigencia = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        vigencia = new javax.swing.JPanel();
        stdVigente = new javax.swing.JRadioButton();
        stdSuspend = new javax.swing.JRadioButton();
        buttons = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        table_pane = new javax.swing.JPanel();
        lblTotalArea = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tanleAreas = new javax.swing.JTable();

        delete.setText("Eliminar");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        floatMen.add(delete);

        supend.setText("suspender");
        supend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supendActionPerformed(evt);
            }
        });
        floatMen.add(supend);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        container.setLayout(new java.awt.GridLayout(1, 2, 10, 25));

        Area.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 20));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Mantenimiento de Area");
        Area.add(jLabel5);

        form.setPreferredSize(new java.awt.Dimension(380, 500));
        form.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 20));

        input_codigo.setPreferredSize(new java.awt.Dimension(350, 75));
        input_codigo.setLayout(new java.awt.BorderLayout(6, 6));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Codigo:");
        input_codigo.add(jLabel4, java.awt.BorderLayout.PAGE_START);

        codigo.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 8, 5));

        txtCodigo.setPreferredSize(new java.awt.Dimension(100, 30));
        codigo.add(txtCodigo);

        btnGenerateCode.setPreferredSize(new java.awt.Dimension(35, 35));
        btnGenerateCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateCodeActionPerformed(evt);
            }
        });
        codigo.add(btnGenerateCode);

        input_codigo.add(codigo, java.awt.BorderLayout.CENTER);

        form.add(input_codigo);

        input_nombre.setPreferredSize(new java.awt.Dimension(350, 60));
        input_nombre.setLayout(new java.awt.BorderLayout(10, 10));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Nombre:");
        input_nombre.add(jLabel2, java.awt.BorderLayout.PAGE_START);

        txtName.setPreferredSize(new java.awt.Dimension(80, 30));
        input_nombre.add(txtName, java.awt.BorderLayout.PAGE_END);

        form.add(input_nombre);

        input_vigencia.setPreferredSize(new java.awt.Dimension(350, 60));
        input_vigencia.setLayout(new java.awt.BorderLayout(10, 10));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Estado:");
        input_vigencia.add(jLabel3, java.awt.BorderLayout.PAGE_START);

        vigencia.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        stdVigente.setText("vigente");
        vigencia.add(stdVigente);

        stdSuspend.setText("suspendido");
        vigencia.add(stdSuspend);

        input_vigencia.add(vigencia, java.awt.BorderLayout.CENTER);

        form.add(input_vigencia);

        buttons.setPreferredSize(new java.awt.Dimension(300, 60));

        btnSave.setText("Guardar");
        btnSave.setPreferredSize(new java.awt.Dimension(200, 45));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        buttons.add(btnSave);

        form.add(buttons);

        Area.add(form);

        container.add(Area);

        table_pane.setPreferredSize(new java.awt.Dimension(500, 510));
        table_pane.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 10));

        lblTotalArea.setText("Total de Areas:");
        table_pane.add(lblTotalArea);

        tanleAreas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tanleAreas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tanleAreasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tanleAreas);

        table_pane.add(jScrollPane1);

        container.add(table_pane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, 974, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clean() {
        this.formTrack.cleanForm();

    }

    private Area obtainValues() {

        int code = (int) this.formTrack.getValue("code");
        String nombre = (String) this.formTrack.getValue("name");
        boolean vigencia = false;
        if (stdSuspend.isSelected()) {
            vigencia = false;
        }
        if (stdVigente.isSelected()) {
            vigencia = true;
        }
        Area objarea = new Area(code, nombre, vigencia);

        return objarea;
    }

    private void changueState(Area objArea) {
        if (objArea == null) {
            this.btnSave.setText("Guardar");
            this.currentArea = null;

            this.clean();
        } else {
            this.btnSave.setText("Guardar cambios");
            this.patchValues(objArea);
            this.currentArea = objArea;

        }
    }

    private void patchValues(Area objArea) {
        txtCodigo.setText(String.valueOf(objArea.getCodArea()));
        txtName.setText(objArea.getNombre());
        if (objArea.isVigencia()) {
            stdVigente.setSelected(objArea.isVigencia());
        } else {
            stdSuspend.setSelected(objArea.isVigencia());
        }

    }

    private void fillTable(String query) {
        Object[] columns = {"Codigo", "Nombre", "Estado"};
        LeTableModel<Area> modelo = new LeTableModel<Area>(area -> {
            return new Object[]{area.getCodArea(), area.getNombre(), area.isVigencia()};
        });
        modelo.addColumns(Arrays.asList(columns));
        try {
            this.areacontroller.updateNodes().forEach(area -> {
                modelo.addRow(area);
            });
            tanleAreas.setModel(modelo);
        } catch (SQLException ex) {
            Dialogs.bderrorMessage();
        }
    }

    private boolean isEditMode() {
        return this.currentArea != null;
    }

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        if (!this.formTrack.isValid()) {
            Dialogs.errorMessage(this.formTrack.getError());
            return;
        }
        try {
            // save
            if (!isEditMode()) {
                Optional<Area> optArea = areacontroller.createNode(this.obtainValues());
                if (optArea.isPresent()) {
                    Dialogs.successMessage("Area correctamente creada");
                    this.changueState(optArea.get());
                } else {
                    throw new Exception();
                }
            } else {
                // edit
                Optional<Area> optArea = areacontroller.updateNode(this.currentArea.getCodArea(), this.obtainValues());
                if (optArea.isPresent()) {
                    Dialogs.successMessage("Se ha editado un registro");
                    this.changueState(null);
                } else {
                    throw new Exception();
                }
            }
            this.fillTable(null);

        } catch (Exception ex) {
            ex.printStackTrace();
            Dialogs.errorMessage("Tubimos un problema Al hacer esta operacion");
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnGenerateCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateCodeActionPerformed
        try {
            // TODO add your handling code here:
            int d = this.areacontroller.generateCode();
            if (d == -1) {
                throw new SQLException();
            }
            txtCodigo.setText(String.valueOf(d));

        } catch (SQLException ex) {
            Dialogs.bderrorMessage();
        }
    }//GEN-LAST:event_btnGenerateCodeActionPerformed

    private void tanleAreasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tanleAreasMouseClicked

        if (evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1) {
        
            //  floatMen.setLocation(evt.getComponent().getX(), evt.getPoint);
            floatMen.setLocation(evt.getLocationOnScreen());
            floatMen.setVisible(true);

        } else {
           LeTableModel<Area> modelo = (LeTableModel<Area>) tanleAreas.getModel();
           int row=  tanleAreas.getSelectedRow();
           this.changueState(modelo.get(row));
           
        }


    }//GEN-LAST:event_tanleAreasMouseClicked

    private void supendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supendActionPerformed
        // TODO add your handling code here:
        System.out.println("suspend");
    }//GEN-LAST:event_supendActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try {
            // TODO add your handling code here:
          Optional<Area> optArea  =  this.areacontroller.deleteNode(this.currentArea.getCodArea());
          
          if(optArea.isPresent()){
              Dialogs.successMessage("Se ha eliminado un registro");
              
              this.changueState(null);
              this.fillTable(null);
          }else{
              throw new SQLException();
          }
          this.resolvePopup();
          
        } catch (SQLException ex) {
            Dialogs.bderrorMessage();
        }
        
    }//GEN-LAST:event_deleteActionPerformed

     private void resolvePopup(){
           if(floatMen.isVisible()){
           floatMen.setVisible(false);
       }
     }
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
       if(floatMen.isVisible()){
           floatMen.setVisible(false);
       }
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmArea dialog = new FrmArea(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Area;
    private javax.swing.JButton btnGenerateCode;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel buttons;
    private javax.swing.JPanel codigo;
    private javax.swing.JPanel container;
    private javax.swing.JMenuItem delete;
    private javax.swing.JPopupMenu floatMen;
    private javax.swing.JPanel form;
    private javax.swing.JPanel input_codigo;
    private javax.swing.JPanel input_nombre;
    private javax.swing.JPanel input_vigencia;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotalArea;
    private javax.swing.JRadioButton stdSuspend;
    private javax.swing.JRadioButton stdVigente;
    private javax.swing.JMenuItem supend;
    private javax.swing.JPanel table_pane;
    private javax.swing.JTable tanleAreas;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtName;
    private javax.swing.JPanel vigencia;
    // End of variables declaration//GEN-END:variables
}
